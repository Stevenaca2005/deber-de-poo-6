import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public class PhishingExplorer {

    private static final String FILE_NAME = "messages.txt";

    public static void main(String[] args) {
        // Cargar las palabras clave y sus valores correspondientes
        Map<String, Integer> keywords = cargarPalabrasClave();

        // Inicializar el total de puntos
        int totalPoints = 0;

        try (BufferedReader reader = new BufferedReader(new FileReader(FILE_NAME))) {
            String line;

            while ((line = reader.readLine()) != null) {
                // Convertir la línea a minúsculas para hacer la comparación sin distinción de mayúsculas
                String lowerCaseLine = line.toLowerCase();

                for (Map.Entry<String, Integer> entry : keywords.entrySet()) {
                    // Verificar si la línea contiene la palabra clave
                    if (lowerCaseLine.contains(entry.getKey().toLowerCase())) {
                        // Imprimir información sobre la ocurrencia
                        System.out.println("Se ha encontrado '" + entry.getKey() + "' en la línea: " + line);
                        System.out.println("\tNúmero de veces: " + contarOcurrencias(lowerCaseLine, entry.getKey().toLowerCase()));
                        System.out.println("\tPuntuación: " + entry.getValue());
                        System.out.println();

                        // Acumular puntos
                        totalPoints += entry.getValue();
                    }
                }
            }

        } catch (FileNotFoundException e) {
            manejarExcepcion("No se pudo encontrar el archivo.", e);
        } catch (IOException e) {
            manejarExcepcion("Ocurrió un error leyendo el archivo.", e);
        }

 // Mostrar el total de puntos
        System.out.println("Total de puntos: " + totalPoints);
    }

    private static Map<String, Integer> cargarPalabrasClave() {
        // Crear un mapa de palabras clave con sus valores asignados
        Map<String, Integer> keywords = new HashMap<>();

        // Agregar las palabras clave con sus valores asignados
        keywords.put("paypal", 2);
        keywords.put("banco", 2);
        keywords.put("actualizar información", 3);
        keywords.put("verificación de cuenta", 3);
        keywords.put("contraseña expirada", 2);
        keywords.put("ganador de lotería", 3);
        keywords.put("herencia", 3);
        keywords.put("oferta exclusiva", 2);
        keywords.put("urgente", 2);
        keywords.put("descuento especial", 2);
        keywords.put("phishing", 3);
        keywords.put("hacerse rico rápido", 3);
        keywords.put("oportunidad única", 2);
        keywords.put("trabajo desde casa", 3);
        keywords.put("confirmar su identidad", 2);
        keywords.put("premio garantizado", 3);
        keywords.put("eliminar deudas", 3);
        keywords.put("¡actúe ahora!", 2);
        keywords.put("correo electrónico sospechoso", 2);
        keywords.put("seguridad de la cuenta", 2);
        keywords.put("compra ahora", 1);
        keywords.put("gratis", 2);
        keywords.put("¡felicidades!", 2);
        keywords.put("revelado secreto", 3);
        keywords.put("confidencial", 2);
        keywords.put("sin costos ocultos", 3);
        keywords.put("aumenta tus ingresos", 2);
        keywords.put("doble tu dinero", 2);
        keywords.put("100% seguro", 2);
        keywords.put("inversiones secretas", 3);

        return keywords;
    }
